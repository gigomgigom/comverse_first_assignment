<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comverse.firstsubject.dao.BoardDao">
	
	<select id="selectTotalRows" parameterType="search">
		select		count(b.board_no)
		from		board b
		join		(
						select 	board_ref
						from	board
						where	board_depth = 0
								<if test='keyword != null and !keyword.equals("")'>
									<if test='searchCtg.equals("title")'>
										and board_title like concat('%', #{keyword}, '%')
									</if>
									<if test='searchCtg.equals("content")'>
										and board_content like concat('%', #{keyword}, '%')
									</if>
									<if test='searchCtg.equals("writer")'>
										and board_writer like concat('%', #{keyword}, '%')
									</if>
								</if>
					) fb
		on			fb.board_ref = b.board_ref
	</select>
	<select id="selectBoardList" parameterType="search" resultType="bo">
		select		b.board_no, 
					b.board_title, 
					b.anon_id, 
					b.board_writer, 
					b.board_date, 
					b.hit_cnt, 
					b.board_enabled,
					b.board_depth
		from		board b
		join		(
						select	board_ref
						from	board
						where	board_depth = 0
								<if test='keyword != null and !keyword.equals("")'>
									<if test='searchCtg.equals("title")'>
										and board_title like concat('%', #{keyword}, '%')
									</if>
									<if test='searchCtg.equals("content")'>
										and board_content like concat('%', #{keyword}, '%')
									</if>
									<if test='searchCtg.equals("writer")'>
										and board_writer like concat('%', #{keyword}, '%')
									</if>
								</if>
					) fb
		on			fb.board_ref = b.board_ref
		order by	b.board_ref desc, 
					b.board_step
		limit		#{pager.startRowIndex}, #{pager.rowsPerPage}
	</select>
	<select id="selectBoardByBoardNo">
		select	board_no, 
				board_title, 
				anon_id, 
				board_writer, 
				board_date, 
				board_content, 
				img_name, 
				hit_cnt,
				board_depth
		from	board
		where	board_no = #{boardNo} 
				and board_enabled = 1
	</select>
	<select id="selectReplyListByBoardNo">
		select		b.board_no, 
					b.board_title, 
					b.board_date, 
					b.anon_id, 
					b.board_writer, 
					b.board_step, 
					b.board_depth,
					b.board_enabled					
		from		board as b		
		join		(		
						select	board_ref, 
								board_step, 
								board_depth								
						from	board
						where	board_no = #{boardNo}						
					) as pb					
		on			b.board_ref = pb.board_ref 
					and b.board_depth > pb.board_depth 
					and b.board_step > pb.board_step					
		order by	board_step
	</select>
	<select id="selectParentBoardByBoardNo">
		select		b.board_no, 
					b.board_title, 
					b.board_writer, 
					b.board_content,
					b.board_enabled
		from		board b
		join		(
						select	board_ref, 
								board_step, 
								board_depth
						from	board
						where	board_no = #{boardNo}
					) cb
		on			b.board_ref = cb.board_ref
					and b.board_depth = cb.board_depth - 1
					and b.board_enabled != 0
		order by	b.board_step desc
		limit		1 
	</select>
	<update id="updateBoardHitCnt">
		update	board
		set		hit_cnt = hit_cnt + 1
		where	board_no = #{boardNo}
	</update>
	<select id="selectBoardImgByBoardNo">
		select	img_name, img_type, img_data
		from	board
		where	board_no = #{boardNo} and board_enabled = 1
	</select>
	<insert id="insertNewBoard" parameterType="bo">
		<selectKey resultType="int" keyProperty="boardRef" order="BEFORE">
			select	max(board_ref) + 1 as board_ref
			from	board
		</selectKey>
		insert into board
			(
				board_title, board_writer, board_date, board_ctg,
				board_content, img_name, img_type, 
				img_data, board_enabled, hit_cnt,
				board_ref, board_step, board_depth
			)
		values
			(
				#{boardTitle}, #{boardWriter}, curdate(), #{boardCtg},
				#{boardContent}, #{imgName}, #{imgType},
				#{imgData}, #{boardEnabled}, 0,
				#{boardRef}, #{boardStep}, #{boardDepth}
			)
	</insert>
	<update id="updateBoard" parameterType="bo">
		update	board
		set		board_title = #{boardTitle},
				board_content = #{boardContent}
				<if test='imgName != null and !imgName.equals("")'>
					,
					img_name = #{imgName},
					img_type = #{imgType},
					img_data = #{imgData}
				</if>
		where	board_no = #{boardNo}
	</update>
	<update id="updateBoardToDisable">
		update	board
		set		board_enabled = 0
		where	board_no = #{boardNo}
	</update>
	
	<select id="selectParentBoard" resultType="bo">
		select	board_ref, board_step, board_depth
		from	board
		where	board_no = #{parentBoardNo}
	</select>
	<update id="updateBoardStep" parameterType="bo">
		update	board
		set		board_step = board_step + 1
		where	board_ref = #{boardRef} and board_step > #{boardStep}
	</update>
	<insert id="insertReply" parameterType="bo">
		<selectKey resultType="bo" keyProperty="boardRef,boardStep,boardDepth" order="BEFORE">
			select 	board_ref, 
					board_step + 1 as board_step, 
					board_depth + 1 as board_depth
			from	board
			where	board_no = #{preBoard}
		</selectKey>
		insert into	board
			(
				board_title, board_ctg,
				<if test="boardWriter != null">
					board_writer,
				</if>
				<if test="boardWriter == null">
					anon_id,
					anon_pw,
				</if>
				board_date, board_content,
				img_name, img_type, img_data,
				board_enabled, hit_cnt,
				board_ref, board_step, board_depth
			)
		values
			(
				#{boardTitle}, #{boardCtg},
				<if test="boardWriter != null">
					#{boardWriter},
				</if>
				<if test="boardWriter == null">
					#{anonId},
					#{anonPw},
				</if>
				curdate(), #{boardContent},
				#{imgName}, #{imgType}, #{imgData},
				1, 0,
				#{boardRef}, #{boardStep}, #{boardDepth}
			)
	</insert>
	<update id="updateReplyEnabled">
		update	reply
		set		reply_enabled = 0
		where	reply_no = #{replyNo}
	</update>
	<update id="updateReply">
		update	reply
		set		reply_content = #{replyContent}
		where	reply_no = #{replyNo}
	</update>
	
	<select id="selectBoardWriterByBoNo" resultType="bo">
		select	board_writer, anon_pw
		from 	board
		where	board_no = #{boardNo} and board_enabled = 1
	</select>
	
	<select id="selectReplyForCheckIdPw" resultType="bo">
		select	anon_id, anon_pw,
		from	board
		where	board_no = #{boardNo}
	</select>
</mapper>