<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comverse.firstsubject.dao.BoardDao">
	
	<select id="selectTotalRows" parameterType="search">
		with recursive BoardTree as (
			select
					board_no,
					pre_board
			from	board
			where	pre_board is null and board_ctg = 1
					<if test='keyword != null and !keyword.equals("")'>
						<if test='searchCtg.equals("title")'>
							and board_title like concat('%', #{keyword}, '%')
						</if>
						<if test='searchCtg.equals("content")'>
							and board_content like concat('%', #{keyword}, '%')
						</if>
						<if test='searchCtg.equals("writer")'>
							and board_writer like concat('%', #{keyword}, '%')
						</if>
					</if>
			
			union all
			
			select
					b.board_no,
					b.pre_board
			from	board b
			join	BoardTree bt on b.pre_board = bt.board_no
			where	board_ctg = 1
		)
		select	count(*)
		from	BoardTree
	</select>
	<select id="selectBoardList" parameterType="search" resultType="bo">
		with recursive BoardTree as (
			select
					board_no, board_title,
					pre_board, board_writer,
					anon_id, board_date,
					hit_cnt, 1 as board_level,
					cast(board_no as char(50)) as board_path,
					board_enabled, board_date as root_date
			from	board
			where	pre_board is null and board_ctg = 1
					<if test='keyword != null and !keyword.equals("")'>
						<if test='searchCtg.equals("title")'>
							and board_title like concat('%', #{keyword}, '%')
						</if>
						<if test='searchCtg.equals("content")'>
							and board_content like concat('%', #{keyword}, '%')
						</if>
						<if test='searchCtg.equals("writer")'>
							and board_writer like concat('%', #{keyword}, '%')
						</if>
					</if>
			
			
			union all
			
			select
					b.board_no, b.board_title,
					b.pre_board, b.board_writer,
					b.anon_id, b.board_date,
					b.hit_cnt, bt.board_level + 1,
					concat(bt.board_path, '-', b.board_no) as board_path,
					b.board_enabled, bt.root_date
			from	board b
			join	BoardTree bt on b.pre_board = bt.board_no
			where	board_ctg = 1
		)
		select
					board_no, board_title,
					pre_board, board_writer,
					anon_id, board_date,
					hit_cnt, board_level,
					board_path, board_enabled,
					root_date
			from	BoardTree
		order by	root_date desc, board_path, board_level
		limit 		#{pager.startRowIndex}, #{pager.rowsPerPage}
	</select>
	<select id="selectBoardByBoardNo">
		select	board_no, board_title, board_writer, board_date, board_content, img_name
		from	board
		where	board_no = #{boardNo} and board_enabled = 1
	</select>
	<select id="selectReplyListByBoardNo">
		select		reply_no, reply_writer, reply_content, reply_date
		from		reply
		where		reply_board = #{boardNo} and reply_enabled = 1
		order by 	reply_no desc;
	</select>
	<select id="selectBoardImgByBoardNo">
		select	img_name, img_type, img_data
		from	board
		where	board_no = #{boardNo} and board_enabled = 1
	</select>
	<insert id="insertNewBoard" parameterType="bo">
		insert into board
			(
				board_title, board_writer, board_date, board_ctg,
				board_content, img_name, img_type, 
				img_data, board_enabled, hit_cnt
			)
		values
			(
				#{boardTitle}, #{boardWriter}, curdate(), #{boardCtg},
				#{boardContent}, #{imgName}, #{imgType},
				#{imgData}, #{boardEnabled}, 0
			)
	</insert>
	<update id="updateBoard" parameterType="bo">
		update	board
		set		board_title = #{boardTitle},
				board_content = #{boardContent}
				<if test='imgName != null and !imgName.equals("")'>
					,
					img_name = #{imgName},
					img_type = #{imgType},
					img_data = #{imgData}
				</if>
		where	board_no = #{boardNo}
	</update>
	<update id="updateBoardToDisable">
		update	board
		set		board_enabled = 0
		where	board_no = #{boardNo}
	</update>
	<insert id="insertReply" parameterType="rply">
		insert into	reply
			(
				reply_writer, reply_board, reply_date,
				reply_content, reply_enabled
			)
		values
			(
				#{replyWriter}, #{replyBoard}, curdate(),
				#{replyContent}, #{replyEnabled}
			)
	</insert>
	<update id="updateReplyEnabled">
		update	reply
		set		reply_enabled = 0
		where	reply_no = #{replyNo}
	</update>
	<update id="updateReply">
		update	reply
		set		reply_content = #{replyContent}
		where	reply_no = #{replyNo}
	</update>
	
	<select id="selectBoardWriterByBoNo" resultType="String">
		select	board_writer
		from 	board
		where	board_no = #{boardNo} and board_enabled = 1
	</select>
</mapper>